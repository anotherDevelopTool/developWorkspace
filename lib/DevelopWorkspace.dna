<DnaLibrary RuntimeVersion="v4.0" Name="Ribbon Tests" Language="C#">
<Reference AssemblyPath="System.Windows.Forms.dll" />
<Reference AssemblyPath="DevelopWorkspace.Main.exe" />
<Reference AssemblyPath="PresentationFramework.dll" />
<Reference AssemblyPath="WindowsBase.dll" />
<Reference AssemblyPath="PresentationCore.dll" />
<Reference AssemblyPath="System.Xaml.dll" />

<![CDATA[

using System;
using System.Runtime.InteropServices;
using System.Windows;
using ExcelDna.Integration.CustomUI;
using ExcelDna.Integration;
using System.Threading.Tasks;
using System.Threading;

[ComVisible(true)]
public class MyRibbon : ExcelRibbon
{
	public void OnButtonPressed(IRibbonControl control)
	{
		try{
			Thread newWindowThread = new Thread(new ThreadStart(ThreadStartingPoint));
		    newWindowThread.SetApartmentState(ApartmentState.STA);
		    newWindowThread.IsBackground = true;
		    newWindowThread.Start();
		}
		catch(Exception e){
			MessageBox.Show(e.Message);
		}
		
	}
	private void ThreadStartingPoint()
	{
	    DevelopWorkspace.Main.MainWindow tempWindow = new DevelopWorkspace.Main.MainWindow();
	    tempWindow.Show();       
	    System.Windows.Threading.Dispatcher.Run();
	}

	public static void ShowHelloMessage()
	{
		
	}



}
 

public static class MyFunctions
{
	public static string TestFunction()
	{
	return "Testing...OK";
	}

} 

]]>
  <!-- Some images that can be used in the Ribbon ui -->
  <Image Name="M" Path="M.png" Pack="true" />
  
  <!-- Below are three CustomUI elements used for different Excel versions.
       Need not have all three - ExcelDna whatever is most appropriate.
  -->
  <CustomUI>
    <!-- Inside here is the exact RibbonX xml passed to Excel -->
    <!-- This will only be loaded for Excel 2010 because of the namespace -->
    <customUI xmlns='http://schemas.microsoft.com/office/2009/07/customui' loadImage='LoadImage'>
      <ribbon>
        <tabs>
          <tab id='CustomTab' label='My 2010 Tab'>
            <group id='SampleGroup' label='My Sample Group'>
              <button id='Button1' label='My Button Label' image='M' size='large' onAction='RunTagMacro' tag='ShowHelloMessage' />
              <button id='Button2' label='My Second Button' image='M' size='normal' onAction='OnButtonPressed'/>
            </group >
          </tab>
        </tabs>
      </ribbon>
    </customUI>
  </CustomUI>
  
  <CustomUI>
    <!-- Inside here is the RibbonX xml passed to Excel -->
    <!-- This can also be loaded by Excel 2007 because of the namespace -->
    <customUI xmlns='http://schemas.microsoft.com/office/2006/01/customui' loadImage='LoadImage'>
      <ribbon>
        <tabs>
          <tab id='CustomTab' label='My Tab'>
            <group id='SampleGroup' label='My Sample Group'>
              <button id='Button1' label='My Button Label' image='M' size='large' onAction='RunTagMacro' tag='ShowHelloMessage' />
              <button id='Button2' label='My Second Button' image='M' size='normal' onAction='OnButtonPressed'/>
            </group >
          </tab>
        </tabs>
      </ribbon>
    </customUI>
  </CustomUI>
  
  <CustomUI>
    <!-- CommandBars Fallback for Excel version pre-2007, interpreted by ExcelDna (I just made up the namespace for future versioning) -->
    <commandBars xmlns='http://schemas.excel-dna.net/office/2003/01/commandbars' >
      <commandBar name='Worksheet Menu Bar'>
        <!-- Here we add a top-level menu to the main Excel Worksheet menu -->
        <popup caption='My Excel-Dna Menu' height='19'  >
          <button caption='Say Hello' onAction='ShowHelloMessage' image='M' beginGroup='true'></button>
          <button caption='Another Item...' enabled='false' tooltipText='In the tooltip?' />
          <popup caption='My sub-menu' >
            <button helpFile='xyz.hlp' faceId='123' helpContextId='134' caption='SubMenu Button' onAction='ShowHelloMessage'/>
          </popup>
        </popup>
      </commandBar>
      <commandBar name='Cell'>
        <!-- Here we add a menu to the Excel context menu -->
        <button caption='New context item' enabled='false' ShortcutText='CTRL+A'/>
      </commandBar>
    </commandBars>
  </CustomUI>
</DnaLibrary>
