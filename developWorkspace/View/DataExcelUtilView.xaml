<UserControl x:Class="DevelopWorkspace.Main.View.DataExcelUtilView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
             xmlns:heid="http://schemas.heidesoft.com/components"
             xmlns:main="clr-namespace:DevelopWorkspace.Main"
             xmlns:local="clr-namespace:DevelopWorkspace.Main.View"
             xmlns:extoolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:Fluent="clr-namespace:Fluent;assembly=Fluent"
x:Name="dataview"
             mc:Ignorable="d">
    <UserControl.Resources>

        <ResourceDictionary>
            <SolidColorBrush x:Key="EditorSelectionBrush"  Color="Red"/>
            <main:DbProviderImageConverter x:Key="DbProviderImageConverter"/>
            <main:ElementWidhtConverter x:Key="ElementWidhtConverter"/>
            <main:BackgroundBrushConverter x:Key="BackgroundBrushConverter"/>


            <Fluent:RibbonTabItem x:Key="RibbonTabTool" Header="DB commands" ReduceOrder="(P),(P),(P),(P),(P)">

                <Fluent:RibbonGroupBox Header="{DynamicResource  dbsupport.lang.tools.select}">
                    <!--
                <ComboBox x:Name="cmbSavedDatabases" ToolTip="DB接続を選択した上スキーマをロードしてください" SelectedValuePath="ConnectionHistoryID" DisplayMemberPath="ConnectionHistoryName" SelectionChanged="cmbSavedDatabases_SelectionChanged"/>
                -->

                    <ComboBox x:Name="cmbSavedDatabases" SelectionChanged="cmbSavedDatabases_SelectionChanged" ToolTip="{DynamicResource  dbsupport.lang.tools.dbsupport.hint.select}" >

                        <ComboBox.Resources>
                            <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="20" />
                                    </Grid.ColumnDefinitions>
                                    <Border
  x:Name="Border" 
  Grid.ColumnSpan="2"
  CornerRadius="2"
  Background="#C0C0C0"
  BorderBrush="#404040"
  BorderThickness="1" />
                                    <Border 
  Grid.Column="0"
  CornerRadius="2,0,0,2" 
  Margin="1" 
  Background="#FFFFFF" 
  BorderBrush="#404040"
  BorderThickness="0,0,1,0" />
                                    <Path 
  x:Name="Arrow"
  Grid.Column="1"     
  Fill="#404040"
  HorizontalAlignment="Center"
  VerticalAlignment="Center"
  Data="M 0 0 L 4 4 L 8 0 Z"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                                        <Setter TargetName="Border" Property="Background" Value="#808080" />
                                    </Trigger>
                                    <Trigger Property="ToggleButton.IsChecked" Value="true">
                                        <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                                        <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                                        <Setter Property="Foreground" Value="#888888"/>
                                        <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>

                            <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
                                <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
                            </ControlTemplate>

                            <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
                                <Setter Property="SnapsToDevicePixels" Value="true"/>
                                <Setter Property="OverridesDefaultStyle" Value="true"/>
                                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                                <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
                                <Setter Property="MinWidth" Value="120"/>
                                <Setter Property="MinHeight" Value="20"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ComboBox}">
                                            <Grid>
                                                <ToggleButton 
        Name="ToggleButton" 
        Template="{StaticResource ComboBoxToggleButton}" 
        Grid.Column="2" 
        Focusable="false"
        IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
        ClickMode="Press">
                                                </ToggleButton>
                                                <ContentPresenter
        Name="ContentSite"
        IsHitTestVisible="False" 
        Content="{TemplateBinding SelectionBoxItem}"
        ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
        ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
        Margin="3,3,23,3"
        VerticalAlignment="Center"
        HorizontalAlignment="Left" />
                                                <TextBox x:Name="PART_EditableTextBox"
        Style="{x:Null}" 
        Template="{StaticResource ComboBoxTextBox}" 
        HorizontalAlignment="Left" 
        VerticalAlignment="Center" 
        Margin="3,3,23,3"
        Focusable="True" 
        Background="Transparent"
        Visibility="Hidden"
        IsReadOnly="{TemplateBinding IsReadOnly}"/>
                                                <Popup 
        Name="Popup"
        Placement="Bottom"
        IsOpen="{TemplateBinding IsDropDownOpen}"
        AllowsTransparency="True" 
        Focusable="False"
        PopupAnimation="Slide">
                                                    <Grid 
          Name="DropDown"
          SnapsToDevicePixels="True"                
          MinWidth="{TemplateBinding ActualWidth}"
          MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                                        <Border 
            x:Name="DropDownBorder"
            Background="#FFFFFF"
            BorderThickness="1"
            BorderBrush="#888888"/>
                                                        <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                                        </ScrollViewer>
                                                    </Grid>
                                                </Popup>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="HasItems" Value="false">
                                                    <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="false">
                                                    <Setter Property="Foreground" Value="#888888"/>
                                                </Trigger>
                                                <Trigger Property="IsGrouping" Value="true">
                                                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                                </Trigger>
                                                <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                                    <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4"/>
                                                    <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                                                </Trigger>
                                                <Trigger Property="IsEditable"
           Value="true">
                                                    <Setter Property="IsTabStop" Value="false"/>
                                                    <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                                    <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                </Style.Triggers>
                            </Style>

                            <!-- SimpleStyles: ComboBoxItem -->
                            <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
                                <Setter Property="SnapsToDevicePixels" Value="true"/>
                                <Setter Property="OverridesDefaultStyle" Value="true"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                            <Border 
      Name="Border"
      Padding="2"
      SnapsToDevicePixels="true">
                                                <ContentPresenter />
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsHighlighted" Value="true">
                                                    <Setter TargetName="Border" Property="Background" Value="#DDDDDD"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="false">
                                                    <Setter Property="Foreground" Value="#888888"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ComboBox.Resources>

                        <!--ItemTemplate-->
                        <ComboBox.ItemTemplate>
                            <!--DataTemplate开始-->
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="36"/>
                                        <ColumnDefinition Width="100*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="50*"/>
                                        <RowDefinition Height="50*"/>
                                    </Grid.RowDefinitions>
                                    <!--绑定数据对象Image属性-->
                                    <!-- {Binding ProviderID,Converter={DynamicResource DbProviderImageConverter1}} -->
                                    <!--<Image Source="{Binding ProviderID, Mode=TwoWay, Converter={StaticResource DbProviderImageConverter}}" Width="32" Height="32" Margin="3,3,3,3" Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" />-->
                                    <Image Width="32" Height="32" Margin="3,3,3,3" Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" >
                                        <Image.Source>
                                            <MultiBinding  Converter="{StaticResource DbProviderImageConverter}">
                                                <Binding Path="ProviderID"  />
                                                <Binding Path="ConnectionHistoryID"  />
                                            </MultiBinding>
                                        </Image.Source>
                                    </Image>
                                    <StackPanel Margin="1,1,1,1" Orientation="Vertical" Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" Background="{Binding ExcelSchemaThemeColor, Converter={StaticResource BackgroundBrushConverter}}">
                                        <!--绑定数据对象Name属性-->
                                        <TextBlock Text="{Binding ConnectionHistoryName}" FontSize="16" Foreground="Blue" HorizontalAlignment="Left"  VerticalAlignment="Center"/>
                                        <!--绑定数据对象Desc属性-->
                                        <TextBlock Text="{Binding ConnectionString}"  TextWrapping="NoWrap" Width="160" FontSize="10"  HorizontalAlignment="Left"  VerticalAlignment="Center"/>

                                    </StackPanel>
                                </Grid>
                            </DataTemplate>
                            <!--DataTemplate结束-->
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="操作">
                    <Fluent:Button  x:Name="btnLoad" Click="btnLoad_Click"  ToolTip="{DynamicResource  dbsupport.lang.tools.dbsupport.hint.load}"  Header="{DynamicResource  dbsupport.lang.tools.dbsupport.load}" Icon="Images\load.png" LargeIcon="Images\load.png"/>
                    <Fluent:Button x:Name="btnDrawDataToExcel"  Click="btnDrawDataToExcel_Click"  ToolTip="{DynamicResource  dbsupport.lang.tools.dbsupport.hint.export}" Header="{DynamicResource  dbsupport.lang.tools.dbsupport.export}" Icon="Images\export.png" LargeIcon="Images\export.png"/>
                    <Fluent:Button x:Name="btnApplyExcelToDb"   Click="btnApplyExcelToDb_Click"  ToolTip="{DynamicResource  dbsupport.lang.tools.dbsupport.hint.sync}" Header="{DynamicResource  dbsupport.lang.tools.dbsupport.sync}" Icon="Images\import.png" LargeIcon="Images\import.png"/>
                    <Fluent:Button x:Name="btnMakeDiff"   Click="btnMakeDiff_Click" ToolTip="{DynamicResource  dbsupport.lang.tools.dbsupport.hint.diff}"  Header="{DynamicResource  dbsupport.lang.tools.dbsupport.diff}" Icon="Images\dff.png" LargeIcon="Images\compare.png"/>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="{DynamicResource  dbsupport.lang.tools.dbsupport.setting}">
                    <Fluent:DropDownButton  ResizeMode="Both" Icon="Images\setting.png" LargeIcon="Images\setting.png">
                        <extoolkit:PropertyGrid Name="propertygrid1"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        MinWidth="600"
                        MinHeight="500"
                        Margin="0" />
                    </Fluent:DropDownButton>

                </Fluent:RibbonGroupBox>

            </Fluent:RibbonTabItem>
            <Fluent:RibbonTabItem x:Key="SqlTabTool" Header="SQL commands"  ReduceOrder="(P),(P),(P),(P),(P)">
                <Fluent:RibbonGroupBox Header="SQL commands">
                    <Fluent:Button x:Name="btnExecuteQuery"  IsEnabled="False" Click="btnExecuteQuery_Click" ToolTip="{DynamicResource  dbsupport.lang.tools.dbsupport.hint.executesql}"  Header="execute sql" Icon="Images\run_sql.png" LargeIcon="Images\run_sql.png"/>

                    <Fluent:Button x:Name="btnFormatQuery"   IsEnabled="False" Click="btnFormatQuery_Click" ToolTip="{DynamicResource  dbsupport.lang.tools.dbsupport.hint.formatsql}"  Header="formatter" Icon="Images\sql.png" LargeIcon="Images\sql.png"/>

                    <Fluent:Button x:Name="btnPreviousQuery"   IsEnabled="False" Click="btnPreviousQuery_Click" ToolTip="{DynamicResource  dbsupport.lang.tools.dbsupport.hint.previoussubsql}"  Header="Previous" Icon="Images\previous.png" LargeIcon="Images\previous.png"/>

                    <Fluent:Button x:Name="btnNextQuery"   IsEnabled="False" Click="btnNextQuery_Click" ToolTip="{DynamicResource  dbsupport.lang.tools.dbsupport.hint.nextsubsql}"  Header="Next" Icon="Images\next.png" LargeIcon="Images\next.png"/>

                    <Fluent:Button x:Name="btnExportDataToExcel"  IsEnabled="False" Click="btnExportDataToExcel_Click" ToolTip="{DynamicResource  dbsupport.lang.tools.dbsupport.hint.exportresult}"  Header="export to Excel" Icon="Images\export.png" LargeIcon="Images\export.png"/>

                    <CheckBox  x:Name="chkDummyData" Margin="15" IsChecked="True" Content="{DynamicResource  dbsupport.lang.tools.dbsupport.hintdata}"/>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>
            <Style x:Key="busyStyle" TargetType="{x:Type Control}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Control}">
                            <ControlTemplate.Resources>
                                <Style TargetType="{x:Type Rectangle}">
                                    <Setter Property="Width" Value="8" />
                                    <Setter Property="Height" Value="16" />
                                    <Setter Property="Stroke" Value="Black" />
                                    <Setter Property="StrokeThickness" Value="1" />
                                    <Setter Property="RadiusX" Value="2" />
                                    <Setter Property="RadiusY" Value="2" />
                                    <Setter Property="RenderTransformOrigin" Value=".5,.5" />
                                </Style>
                            </ControlTemplate.Resources>
                            <Canvas Width="64" Height="64">
                                <Rectangle Canvas.Left="24">
                                    <Rectangle.Fill>
                                        <SolidColorBrush x:Name="top" Color="#DFDFDF" />
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Canvas.Left="10" Canvas.Top="6">
                                    <Rectangle.RenderTransform>
                                        <RotateTransform Angle="-45" />
                                    </Rectangle.RenderTransform>
                                    <Rectangle.Fill>
                                        <SolidColorBrush x:Name="topLeft" Color="#DFDFDF" />
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Canvas.Top="24" Width="16" Height="8">
                                    <Rectangle.Fill>
                                        <SolidColorBrush x:Name="left" Color="#DFDFDF" />
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Canvas.Left="10" Canvas.Top="34">
                                    <Rectangle.RenderTransform>
                                        <RotateTransform Angle="45" />
                                    </Rectangle.RenderTransform>
                                    <Rectangle.Fill>
                                        <SolidColorBrush x:Name="bottomLeft" Color="#DFDFDF" />
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Canvas.Left="24" Canvas.Top="40">
                                    <Rectangle.Fill>
                                        <SolidColorBrush x:Name="bottom" Color="#DFDFDF" />
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Canvas.Left="38" Canvas.Top="34">
                                    <Rectangle.RenderTransform>
                                        <RotateTransform Angle="-45" />
                                    </Rectangle.RenderTransform>
                                    <Rectangle.Fill>
                                        <SolidColorBrush x:Name="bottomRight" Color="#DFDFDF" />
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Canvas.Top="24" Canvas.Left="38" Width="16" Height="8">
                                    <Rectangle.Fill>
                                        <SolidColorBrush x:Name="right" Color="#DFDFDF" />
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Canvas.Left="38" Canvas.Top="6">
                                    <Rectangle.RenderTransform>
                                        <RotateTransform Angle="45" />
                                    </Rectangle.RenderTransform>
                                    <Rectangle.Fill>
                                        <SolidColorBrush x:Name="topRight" Color="#DFDFDF" />
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Canvas>

                            <ControlTemplate.Triggers>
                                <EventTrigger RoutedEvent="Loaded">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard>
                                            <Storyboard RepeatBehavior="Forever" Duration="0:0:1.6">
                                                <ColorAnimation Storyboard.TargetName="top"
                                                            Storyboard.TargetProperty="Color"
                                                            To="#606060"
                                                            BeginTime="0:0:0"
                                                            Duration="0:0:0" />
                                                <ColorAnimation Storyboard.TargetName="topRight"
                                                            Storyboard.TargetProperty="Color"
                                                            To="#606060"
                                                            BeginTime="0:0:0.2"
                                                            Duration="0:0:0" />
                                                <ColorAnimation Storyboard.TargetName="right"
                                                            Storyboard.TargetProperty="Color"
                                                            To="#606060"
                                                            BeginTime="0:0:0.4"
                                                            Duration="0:0:0" />
                                                <ColorAnimation Storyboard.TargetName="bottomRight"
                                                            Storyboard.TargetProperty="Color"
                                                            To="#606060"
                                                            BeginTime="0:0:0.6"
                                                            Duration="0:0:0" />
                                                <ColorAnimation Storyboard.TargetName="bottom"
                                                            Storyboard.TargetProperty="Color"
                                                            To="#606060"
                                                            BeginTime="0:0:0.8"
                                                            Duration="0:0:0" />
                                                <ColorAnimation Storyboard.TargetName="bottomLeft"
                                                            Storyboard.TargetProperty="Color"
                                                            To="#606060"
                                                            BeginTime="0:0:1"
                                                            Duration="0:0:0" />
                                                <ColorAnimation Storyboard.TargetName="left"
                                                            Storyboard.TargetProperty="Color"
                                                            To="#606060"
                                                            BeginTime="0:0:1.2"
                                                            Duration="0:0:0" />
                                                <ColorAnimation Storyboard.TargetName="topLeft"
                                                            Storyboard.TargetProperty="Color"
                                                            To="#606060"
                                                            BeginTime="0:0:1.4"
                                                            Duration="0:0:0" />

                                                <ColorAnimation Storyboard.TargetName="top"
                                                            Storyboard.TargetProperty="Color"
                                                            BeginTime="0:0:0.1"
                                                            Duration="0:0:0.4" />
                                                <ColorAnimation Storyboard.TargetName="topRight"
                                                            Storyboard.TargetProperty="Color"
                                                            BeginTime="0:0:0.3"
                                                            Duration="0:0:0.4" />
                                                <ColorAnimation Storyboard.TargetName="right"
                                                            Storyboard.TargetProperty="Color"
                                                            BeginTime="0:0:0.5"
                                                            Duration="0:0:0.4" />
                                                <ColorAnimation Storyboard.TargetName="bottomRight"
                                                            Storyboard.TargetProperty="Color"
                                                            BeginTime="0:0:0.7"
                                                            Duration="0:0:0.4" />
                                                <ColorAnimation Storyboard.TargetName="bottom"
                                                            Storyboard.TargetProperty="Color"
                                                            BeginTime="0:0:0.9"
                                                            Duration="0:0:0.4" />
                                                <ColorAnimation Storyboard.TargetName="bottomLeft"
                                                            Storyboard.TargetProperty="Color"
                                                            BeginTime="0:0:1.1"
                                                            Duration="0:0:0.4" />
                                                <ColorAnimation Storyboard.TargetName="left"
                                                            Storyboard.TargetProperty="Color"
                                                            BeginTime="0:0:1.3"
                                                            Duration="0:0:0.4" />
                                                <ColorAnimation Storyboard.TargetName="topLeft"
                                                            Storyboard.TargetProperty="Color"
                                                            BeginTime="0:0:1.5"
                                                            Duration="0:0:0.4" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0" x:Key="panelBackgroundBrush">
                <LinearGradientBrush.GradientStops>
                    <GradientStop Color="#FFE3EFFF" Offset="1" />
                    <GradientStop Color="#FFAFD2FF" Offset="0" />
                </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>

            <Style x:Key="gridSplitterStyle" TargetType="{x:Type GridSplitter}">
                <Setter Property="FrameworkElement.Width" Value="8"/>
                <Setter Property="TextElement.Foreground" Value="#FF204D89" />
                <Setter Property="Border.BorderBrush" Value="#FF6593CF" />
                <Setter Property="Panel.Background" Value="{StaticResource panelBackgroundBrush}" />
                <Setter Property="Border.BorderThickness" Value="0,0,0,1" />
                <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
                <Setter Property="UIElement.Focusable" Value="False" />
                <Setter Property="Control.Padding" Value="7,7,7,7" />
                <Setter Property="FrameworkElement.Cursor" Value="SizeWE" />
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}">
                                <Border BorderThickness="0,0,1,1" BorderBrush="{StaticResource panelBackgroundBrush}">
                                    <Canvas Width="3" Height="19">
                                        <Rectangle Fill="{StaticResource panelBackgroundBrush}" Width="2" Height="2" Canvas.Left="0" Canvas.Top="1" />
                                        <Rectangle Fill="{StaticResource panelBackgroundBrush}" Width="2" Height="2" Canvas.Left="0" Canvas.Top="5" />
                                        <Rectangle Fill="{StaticResource panelBackgroundBrush}" Width="2" Height="2" Canvas.Left="0" Canvas.Top="9" />
                                        <Rectangle Fill="{StaticResource panelBackgroundBrush}" Width="2" Height="2" Canvas.Left="0" Canvas.Top="13" />
                                        <Rectangle Fill="{StaticResource panelBackgroundBrush}" Width="2" Height="2" Canvas.Left="0" Canvas.Top="17" />
                                        <Rectangle Fill="{TemplateBinding TextElement.Foreground}" Width="2" Height="2" Canvas.Left="0" Canvas.Top="0" />
                                        <Rectangle Fill="{TemplateBinding TextElement.Foreground}" Width="2" Height="2" Canvas.Left="0" Canvas.Top="4" />
                                        <Rectangle Fill="{TemplateBinding TextElement.Foreground}" Width="2" Height="2" Canvas.Left="0" Canvas.Top="8" />
                                        <Rectangle Fill="{TemplateBinding TextElement.Foreground}" Width="2" Height="2" Canvas.Left="0" Canvas.Top="12" />
                                        <Rectangle Fill="{TemplateBinding TextElement.Foreground}" Width="2" Height="2" Canvas.Left="0" Canvas.Top="16" />
                                    </Canvas>
                                </Border>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid ShowGridLines="False">
        <TabControl Name="tabControl1" TabStripPlacement="Left" SelectionChanged="tabControl1_SelectionChanged">
            <TabControl.Resources>
                <Style TargetType="{x:Type TabItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabItem}">
                                <Grid>
                                    <Border
                                        Name="bd"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="Gray"
                                        BorderThickness="2"
                                        CornerRadius="7"
                                        Margin="0">
                                        <ContentPresenter
                                            ContentSource="Header"
                                            VerticalAlignment="Center"
                                         />
                                    </Border>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter
                                        TargetName="bd"
                                        Property="BorderThickness"
                                        Value="3" />
                                        <Setter
                                        TargetName="bd"
                                        Property="Margin"
                                        Value="0" />

                                        <Setter
                                        TargetName="bd"
                                        Property="Background"
                                        Value="{Binding ThemeColorBrush }" />

                                    </Trigger>
                                    <Trigger Property="TabStripPlacement" Value="Left">
                                        <Setter Property="LayoutTransform">
                                            <Setter.Value>
                                                <RotateTransform Angle="-90" />
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>

                                    <Trigger Property="TabStripPlacement" Value="Right">
                                        <Setter Property="LayoutTransform">
                                            <Setter.Value>
                                                <RotateTransform Angle="90" />
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                    <Trigger
                                Property="IsMouseOver"
                                Value="True"></Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>

                </Style>
                <!-- TabControl的样式 -->
                <Style
            TargetType="{x:Type TabControl}">
                    <Setter
                Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabControl}">
                                <Grid ClipToBounds="True" KeyboardNavigation.TabNavigation="Local" SnapsToDevicePixels="True">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Name="ColumnDefinition0" Width="Auto"/>
                                        <ColumnDefinition Name="ColumnDefinition2" Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Name="RowDefinition0" Height="*"/>
                                        <RowDefinition Name="RowDefinition1" Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <StackPanel
                  Name="HeaderPanel"
                  Grid.Column="0"
                  Grid.Row="0"
                  Margin="2,2,2,0"
                  Panel.ZIndex="1"
                  IsItemsHost="True"
                  KeyboardNavigation.TabIndex="1"/>
                                    <Border
                  Name="ContentPanel"
                  Grid.Column="1"
                  Grid.Row="0"
                  Background="{TemplateBinding Panel.Background}"
                  BorderBrush="{TemplateBinding Border.BorderBrush}"
                  BorderThickness="{TemplateBinding Border.BorderThickness}"
                  KeyboardNavigation.DirectionalNavigation="Contained"
                  KeyboardNavigation.TabIndex="2"
                  KeyboardNavigation.TabNavigation="Local">
                                        <ContentPresenter
                     Name="PART_SelectedContentHost"
                     Margin="{TemplateBinding Control.Padding}"
                     Content="{TemplateBinding TabControl.SelectedContent}"
                     ContentSource="SelectedContent"
                     ContentStringFormat="{TemplateBinding TabControl.SelectedContentStringFormat}"
                     ContentTemplate="{TemplateBinding TabControl.SelectedContentTemplate}"
                     SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                                    </Border>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>


            </TabControl.Resources>
            <TabItem Name="tabItem1" Header="{DynamicResource  dbsupport.lang.tools.dbsupport.schema}" ToolTip="{DynamicResource  dbsupport.lang.tools.dbsupport.hint.schema}">
                <Grid>
                    <ListView Name="trvFamilies"  ItemsSource="{Binding}" KeyDown="trvFamilies_KeyDown" SelectionMode="Single" SelectionChanged="trvFamilies_SelectionChanged">
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <EventSetter Event="KeyUp" Handler="trvFamilies_KeyDown"/>
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="select Sql" Click="MakeSelSql"></MenuItem>
                                <MenuItem Header="schema into json" Click="Schema2Json"></MenuItem>
                                <MenuItem Header="schema into xml" Click="Schema2Xml"></MenuItem>
                                <MenuItem Header="schema XmlSerializer" Click="XmlSerializer"></MenuItem>
                            </ContextMenu>
                        </ListView.ContextMenu>
                        <ListView.View>
                            <GridView>
                                <!-- ITFORCE -->
                                <GridView.ColumnHeaderContainerStyle>
                                    <Style TargetType="{x:Type GridViewColumnHeader}">
                                        <Setter Property="Background" Value="{Binding ThemeColorBrush }" />
                                        <Setter Property="Foreground" Value="Black" />
                                        <Setter Property="FontWeight" Value="Bold" />
                                    </Style>
                                </GridView.ColumnHeaderContainerStyle>
                                <GridViewColumn >
                                    <GridViewColumn.Header>
                                        <CheckBox  Name="tableChecked" Checked="toggleSelect_Checked" Unchecked="toggleSelect_Unchecked"/>
                                    </GridViewColumn.Header>
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox IsChecked="{Binding Selected}" Name="checked" IsThreeState="False" Checked="checked_Checked" Unchecked="checked_Checked"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn  x:Name="column1">
                                    <GridViewColumn.Header>
                                        <StackPanel HorizontalAlignment="Left" >
                                            <TextBlock HorizontalAlignment="Left">TableName</TextBlock>
                                            <TextBox  Name="tableNameFilter" MinWidth="100"   Width="{Binding ElementName=column1,Path=ActualWidth}" TextChanged="filter_TextChanged" HorizontalAlignment="Left"/>
                                        </StackPanel>
                                    </GridViewColumn.Header>
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock  Text="{Binding TableName}" TextTrimming="WordEllipsis" MinWidth="180"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn  x:Name="column2">
                                    <GridViewColumn.Header>
                                        <StackPanel HorizontalAlignment="Left">
                                            <TextBlock HorizontalAlignment="Left">Remark</TextBlock>
                                            <TextBox  Name="tableRemarkFilter" MinWidth="100"  Width="{Binding ElementName=column2,Path=ActualWidth}" TextChanged="filter_TextChanged" HorizontalAlignment="Left"/>
                                        </StackPanel>
                                    </GridViewColumn.Header>
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock TextWrapping="Wrap" Text="{Binding Remark}" TextTrimming="WordEllipsis" MinWidth="200"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn>
                                    <GridViewColumn.Header>
                                        <StackPanel HorizontalAlignment="Right">
                                            <TextBlock HorizontalAlignment="Right">Row</TextBlock>
                                        </StackPanel>
                                    </GridViewColumn.Header>
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock  TextAlignment="Right" Text="{Binding RowCount}" TextTrimming="WordEllipsis" Width="50"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn   x:Name="column3">
                                    <GridViewColumn.Header>
                                        <StackPanel HorizontalAlignment="Left">
                                            <TextBlock HorizontalAlignment="Left">select Clause</TextBlock>
                                            <StackPanel Orientation="Horizontal">
                                                <!--<Button Style="{StaticResource ConfirmButton}" x:Name="applyWhereClause" Content="apply" Click="applyWhereClause_Click" ToolTip="DBデータをエクスポートする際にテーブルの絞り込み条件をカスタマイズできる。特定した更新ユーザー、更新タイムスタンプなどがよく利用される、またそれらの組み合わせも"/>-->
                                                <Button x:Name="applyWhereClause" Content="apply" Background="{Binding ThemeColorBrush }" Click="applyWhereClause_Click" ToolTip="{DynamicResource  dbsupport.lang.tools.dbsupport.hint.whereclause}"/>
                                                <ComboBox x:Name="whereClause" IsEditable="True"  MinWidth="250" Width="{Binding ElementName=column3,Path=ActualWidth, Converter={StaticResource ElementWidhtConverter}}"/>
                                            </StackPanel>
                                        </StackPanel>
                                    </GridViewColumn.Header>
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox  TextWrapping="Wrap" Text="{Binding WhereClause}" Background="Transparent" BorderThickness="0" BorderBrush="Transparent"  MinWidth="250" Width="{Binding ElementName=column3,Path=ActualWidth, Converter={StaticResource ElementWidhtConverter}}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn>
                                    <GridViewColumn.Header>
                                        <StackPanel HorizontalAlignment="Right">
                                            <TextBlock HorizontalAlignment="Right">...</TextBlock>
                                        </StackPanel>
                                    </GridViewColumn.Header>
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <!--<Button Content="..." Width="50" Command="{Binding DetailsClick}" CommandParameter="{Binding} " Background="Transparent" />-->
                                            <Button Content="..." Height="20" Click="details_Click" Background="Transparent" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn   x:Name="column4">
                                    <GridViewColumn.Header>
                                        <StackPanel HorizontalAlignment="Left">
                                            <TextBlock HorizontalAlignment="Left">delete Clause</TextBlock>
                                            <StackPanel Orientation="Horizontal">
                                                <!--<Button  Style="{StaticResource ConfirmButton}" x:Name="applyDeleteClause" Content="apply" Click="applyDeleteClause_Click"  ToolTip="ExcelシートにあるデータをDBへ反映する前にDbデータを削除する条件をカスタマイズできる。デフォルトは1 =0であり、削除処理を行わないである"/>-->
                                                <Button x:Name="applyDeleteClause" Content="apply"  Background="{Binding ThemeColorBrush }" Click="applyDeleteClause_Click"  ToolTip="{DynamicResource  dbsupport.lang.tools.dbsupport.hint.deleteclause}"/>
                                                <ComboBox  x:Name="deleteClause" IsEditable="True"  MinWidth="250"  Width="{Binding ElementName=column4,Path=ActualWidth, Converter={StaticResource ElementWidhtConverter}}"/>
                                            </StackPanel>
                                        </StackPanel>
                                    </GridViewColumn.Header>
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock TextWrapping="Wrap" Text="{Binding DeleteClause}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>

                </Grid>
            </TabItem>
            <TabItem Name="tabItem2" Header="{DynamicResource  dbsupport.lang.tools.dbsupport.sql}" ToolTip="{DynamicResource  dbsupport.lang.tools.dbsupport.hint.sql}">
                <Grid>
                    <avalonEdit:EdiTextEditor Grid.Row="1" Name="txtOutput" 
                                   TextChanged="txtOutput_TextChanged"
                                   IsReadOnly="False" 
                                   ShowLineNumbers="True"
                                   SyntaxHighlighting="SQL"
                                   HorizontalScrollBarVisibility="Auto" 
                                   VerticalScrollBarVisibility="Auto"  >
                        <avalonEdit:EdiTextEditor.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Sql formatter" Click="SqlFormatter"></MenuItem>
                                <MenuItem Header="Sql excecute" Click="MakeSelSql"></MenuItem>
                                <Separator/>
                                <MenuItem Header="Sql physicalName-logicalName converter" Click="MakeSelSql"></MenuItem>
                                <MenuItem Header="Sql logicalName-physicalName converter" Click="MakeSelSql"></MenuItem>
                                <Separator/>
                                <MenuItem Header="Data export" Click="MakeSelSql"></MenuItem>
                            </ContextMenu>
                        </avalonEdit:EdiTextEditor.ContextMenu>
                    </avalonEdit:EdiTextEditor>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>

</UserControl>
