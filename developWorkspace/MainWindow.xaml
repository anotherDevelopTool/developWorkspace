<Fluent:RibbonWindow x:Class="DevelopWorkspace.Main.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:DevelopWorkspace.Main"
    xmlns:view="clr-namespace:DevelopWorkspace.Main.View"
    xmlns:behav="clr-namespace:DevelopWorkspace.Main.Behaviour"
    xmlns:comm="clr-namespace:DevelopWorkspace.Main.Command"
    xmlns:avalonDock="http://schemas.xceed.com/wpf/xaml/avalondock"
    xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
    xmlns:Fluent="clr-namespace:Fluent;assembly=Fluent"
    xmlns:extoolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
    xmlns:diagnostics="clr-namespace:System.Diagnostics;assembly=WindowsBase"
    xmlns:heid="http://schemas.heidesoft.com/components"
    Name="Window"
    Title="developWorkspace" Height="573.094" Width="842.152" Closed="Window_Closed">
    <Fluent:RibbonWindow.Resources>

        <local:CancelButtonPosConverter x:Key="CancelButtonPosConverter"/>
        <local:CancelButtonTopPosConverter x:Key="CancelButtonTopPosConverter"/>
        <local:ActiveDocumentConverter x:Key="ActiveDocumentConverter"/>
        <local:DbProviderImageConverter x:Key="DbProviderImageConverter"/>
        <local:BindingChangedConverter x:Key="BindingChangedConverter"/>
        <avalonDock:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>

        <SolidColorBrush x:Key="EditorSelectionBrush"  Color="Red"/>
        <Style x:Key="busyStyle" TargetType="{x:Type Control}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Control}">
                        <ControlTemplate.Resources>
                            <Style TargetType="{x:Type Rectangle}">
                                <Setter Property="Width" Value="8" />
                                <Setter Property="Height" Value="16" />
                                <Setter Property="Stroke" Value="Black" />
                                <Setter Property="StrokeThickness" Value="1" />
                                <Setter Property="RadiusX" Value="2" />
                                <Setter Property="RadiusY" Value="2" />
                                <Setter Property="RenderTransformOrigin" Value=".5,.5" />
                            </Style>
                        </ControlTemplate.Resources>
                        <StackPanel  Width="480" Height="160">
                            <Border>
                                <StackPanel  Width="480" Height="150">
                                    <Canvas Width="64" Height="64" Margin="15">
                                        <Rectangle Canvas.Left="24">
                                            <Rectangle.Fill>
                                                <SolidColorBrush x:Name="top" Color="#DFDFDF" />
                                            </Rectangle.Fill>
                                        </Rectangle>
                                        <Rectangle Canvas.Left="10" Canvas.Top="6">
                                            <Rectangle.RenderTransform>
                                                <RotateTransform Angle="-45" />
                                            </Rectangle.RenderTransform>
                                            <Rectangle.Fill>
                                                <SolidColorBrush x:Name="topLeft" Color="#DFDFDF" />
                                            </Rectangle.Fill>
                                        </Rectangle>
                                        <Rectangle Canvas.Top="24" Width="16" Height="8">
                                            <Rectangle.Fill>
                                                <SolidColorBrush x:Name="left" Color="#DFDFDF" />
                                            </Rectangle.Fill>
                                        </Rectangle>
                                        <Rectangle Canvas.Left="10" Canvas.Top="34">
                                            <Rectangle.RenderTransform>
                                                <RotateTransform Angle="45" />
                                            </Rectangle.RenderTransform>
                                            <Rectangle.Fill>
                                                <SolidColorBrush x:Name="bottomLeft" Color="#DFDFDF" />
                                            </Rectangle.Fill>
                                        </Rectangle>
                                        <Rectangle Canvas.Left="24" Canvas.Top="40">
                                            <Rectangle.Fill>
                                                <SolidColorBrush x:Name="bottom" Color="#DFDFDF" />
                                            </Rectangle.Fill>
                                        </Rectangle>
                                        <Rectangle Canvas.Left="38" Canvas.Top="34">
                                            <Rectangle.RenderTransform>
                                                <RotateTransform Angle="-45" />
                                            </Rectangle.RenderTransform>
                                            <Rectangle.Fill>
                                                <SolidColorBrush x:Name="bottomRight" Color="#DFDFDF" />
                                            </Rectangle.Fill>
                                        </Rectangle>
                                        <Rectangle Canvas.Top="24" Canvas.Left="38" Width="16" Height="8">
                                            <Rectangle.Fill>
                                                <SolidColorBrush x:Name="right" Color="#DFDFDF" />
                                            </Rectangle.Fill>
                                        </Rectangle>
                                        <Rectangle Canvas.Left="38" Canvas.Top="6">
                                            <Rectangle.RenderTransform>
                                                <RotateTransform Angle="45" />
                                            </Rectangle.RenderTransform>
                                            <Rectangle.Fill>
                                                <SolidColorBrush x:Name="topRight" Color="#DFDFDF" />
                                            </Rectangle.Fill>
                                        </Rectangle>
                                    </Canvas>
                                    <!--处理详细过程的显示，这个做法不是很好，在BackgroundVisualHost端使用了硬编码， -->
                                    <TextBlock x:Name="indicator" TextAlignment="Left" TextWrapping="NoWrap" Text="" Foreground="Red" FontSize="24"/>

                                </StackPanel>
                            </Border>
                        </StackPanel>

                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Loaded">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard RepeatBehavior="Forever" Duration="0:0:1.6">
                                            <ColorAnimation Storyboard.TargetName="top"
                                                            Storyboard.TargetProperty="Color"
                                                            To="Red"
                                                            BeginTime="0:0:0"
                                                            Duration="0:0:0" />
                                            <ColorAnimation Storyboard.TargetName="topRight"
                                                            Storyboard.TargetProperty="Color"
                                                            To="Red"
                                                            BeginTime="0:0:0.2"
                                                            Duration="0:0:0" />
                                            <ColorAnimation Storyboard.TargetName="right"
                                                            Storyboard.TargetProperty="Color"
                                                            To="Red"
                                                            BeginTime="0:0:0.4"
                                                            Duration="0:0:0" />
                                            <ColorAnimation Storyboard.TargetName="bottomRight"
                                                            Storyboard.TargetProperty="Color"
                                                            To="Red"
                                                            BeginTime="0:0:0.6"
                                                            Duration="0:0:0" />
                                            <ColorAnimation Storyboard.TargetName="bottom"
                                                            Storyboard.TargetProperty="Color"
                                                            To="Red"
                                                            BeginTime="0:0:0.8"
                                                            Duration="0:0:0" />
                                            <ColorAnimation Storyboard.TargetName="bottomLeft"
                                                            Storyboard.TargetProperty="Color"
                                                            To="Red"
                                                            BeginTime="0:0:1"
                                                            Duration="0:0:0" />
                                            <ColorAnimation Storyboard.TargetName="left"
                                                            Storyboard.TargetProperty="Color"
                                                            To="Red"
                                                            BeginTime="0:0:1.2"
                                                            Duration="0:0:0" />
                                            <ColorAnimation Storyboard.TargetName="topLeft"
                                                            Storyboard.TargetProperty="Color"
                                                            To="Red"
                                                            BeginTime="0:0:1.4"
                                                            Duration="0:0:0" />

                                            <ColorAnimation Storyboard.TargetName="top"
                                                            Storyboard.TargetProperty="Color"
                                                            BeginTime="0:0:0.1"
                                                            Duration="0:0:0.4" />
                                            <ColorAnimation Storyboard.TargetName="topRight"
                                                            Storyboard.TargetProperty="Color"
                                                            BeginTime="0:0:0.3"
                                                            Duration="0:0:0.4" />
                                            <ColorAnimation Storyboard.TargetName="right"
                                                            Storyboard.TargetProperty="Color"
                                                            BeginTime="0:0:0.5"
                                                            Duration="0:0:0.4" />
                                            <ColorAnimation Storyboard.TargetName="bottomRight"
                                                            Storyboard.TargetProperty="Color"
                                                            BeginTime="0:0:0.7"
                                                            Duration="0:0:0.4" />
                                            <ColorAnimation Storyboard.TargetName="bottom"
                                                            Storyboard.TargetProperty="Color"
                                                            BeginTime="0:0:0.9"
                                                            Duration="0:0:0.4" />
                                            <ColorAnimation Storyboard.TargetName="bottomLeft"
                                                            Storyboard.TargetProperty="Color"
                                                            BeginTime="0:0:1.1"
                                                            Duration="0:0:0.4" />
                                            <ColorAnimation Storyboard.TargetName="left"
                                                            Storyboard.TargetProperty="Color"
                                                            BeginTime="0:0:1.3"
                                                            Duration="0:0:0.4" />
                                            <ColorAnimation Storyboard.TargetName="topLeft"
                                                            Storyboard.TargetProperty="Color"
                                                            BeginTime="0:0:1.5"
                                                            Duration="0:0:0.4" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style  TargetType="{x:Type Border}">
            <Setter Property="Background" Value="White" />
        </Style>
        
        <Style x:Key="ErrorMessageToolTip" TargetType="{x:Type ToolTip}">
            <Setter Property = "HorizontalOffset" Value="50"/>
            <Setter Property = "VerticalOffset" Value="50"/>
            <Setter Property = "Background" Value="White"/>
            <Setter Property = "Foreground" Value="Red"/>
            <Setter Property = "FontSize" Value="12"/>
            <Setter Property = "FontWeight" Value="Bold"/>
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Image Grid.Row="0" Width="20px" Height="20px" Source="Images/error.png"></Image>
                            <TextBlock Grid.Row="1" Margin="5,5,5,5" Text="{TemplateBinding Content }" TextWrapping="Wrap" Width="350" />
                        </Grid>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property ="IsOpen" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Duration="0:0:3">
                                    <DiscreteObjectKeyFrame KeyTime ="0:0:0">
                                        <DiscreteObjectKeyFrame.Value>
                                            <Visibility>Visible</Visibility >
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                    <DiscreteObjectKeyFrame KeyTime ="0:0:3">
                                        <DiscreteObjectKeyFrame.Value>
                                            <Visibility>Hidden</Visibility >
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type ToolTip}">
            <Setter Property = "HorizontalOffset" Value="50"/>
            <Setter Property = "VerticalOffset" Value="50"/>
            <Setter Property = "Background" Value="White"/>
            <Setter Property = "Foreground" Value="Purple"/>
            <Setter Property = "FontSize" Value="12"/>
            <Setter Property = "FontWeight" Value="Bold"/>
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Image Grid.Row="0" Width="20px" Height="20px" Source="Images/images-help.png"></Image>
                            <TextBlock Grid.Row="1" Margin="5,5,5,5" Text="{TemplateBinding Content }" TextWrapping="Wrap" Width="350" />
                        </Grid>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RoundedButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="grid">
                            <Border x:Name="border" CornerRadius="5" BorderBrush="#707070" BorderThickness="1" Background="White">
                                <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      TextElement.FontWeight="Normal">
                                </ContentPresenter>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#BEE6FD"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#3C7FB1"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="#2C628B"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="2"
                  Background="#FFFFFFFF"
                  BorderBrush="#404040"
                  BorderThickness="1" />
                <Border 
                  Grid.Column="0"
                  CornerRadius="2,0,0,2" 
                  Margin="1" 
                  Background="#FFFFFF" 
                  BorderBrush="#404040"
                  BorderThickness="0,0,1,0" />
                <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="#404040"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="#808080" />
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                    <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                    <Setter Property="Foreground" Value="#888888"/>
                    <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>

        <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton 
                                Name="ToggleButton" 
                                Template="{StaticResource ComboBoxToggleButton}" 
                                Grid.Column="2" 
                                Focusable="false"
                                IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter
                                Name="ContentSite"
                                IsHitTestVisible="False" 
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                Margin="3,3,23,3"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left" />
                            <TextBox x:Name="PART_EditableTextBox"
                                Style="{x:Null}" 
                                Template="{StaticResource ComboBoxTextBox}" 
                                HorizontalAlignment="Left" 
                                VerticalAlignment="Center" 
                                Margin="3,3,23,3"
                                Focusable="True" 
                                Background="Transparent"
                                Visibility="Hidden"
                                IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup 
                                Name="Popup"
                                Placement="Bottom"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                AllowsTransparency="True" 
                                Focusable="False"
                                PopupAnimation="Slide">
                                <Grid 
                                  Name="DropDown"
                                  SnapsToDevicePixels="True"                
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border 
                                        x:Name="DropDownBorder"
                                        Background="#FFFFFF"
                                        BorderThickness="1"
                                        BorderBrush="#888888"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEditable" Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>

        <!-- SimpleStyles: ComboBoxItem -->
        <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border 
                              Name="Border"
                              Padding="2"
                              SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#DDDDDD"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


    </Fluent:RibbonWindow.Resources>
    <Canvas>
        <Button x:Name="cancelLongTimeTask"  Click="cancelLongTimeTask_Click" Style="{StaticResource RoundedButtonStyle}" Visibility="Hidden" Background="Transparent" Content="cancel" Width="220" Height="30" Canvas.Left="{Binding Mode=OneWay, Converter={StaticResource CancelButtonPosConverter},RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Window},AncestorLevel=1},Path=Width}" Canvas.Top="{Binding Mode=OneWay, Converter={StaticResource CancelButtonTopPosConverter},RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Window},AncestorLevel=1},Path=Height}" Panel.ZIndex="12345">
        </Button>
        <heid:BusyDecorator x:Name="busy" IsEnabledWhenBusy="False" BusyStyle="{StaticResource busyStyle}">
            <DockPanel LastChildFill="True" Height="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Window},AncestorLevel=1},Path=Height}" Width="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Window},AncestorLevel=1},Path=Width}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Fluent:Ribbon Grid.Row="0" IsQuickAccessToolBarVisible="False" Margin="1,1,2,5"  AutomaticStateManagement="True" x:Name="ribbon" SelectedTabChanged="ribbon_SelectedTabChanged">
                        <Fluent:Ribbon.ToolBarItems>
                            <Fluent:Button Size="Small" Icon="Images\images-help.png" Click="about_Click">
                            </Fluent:Button>
                        </Fluent:Ribbon.ToolBarItems>
                        <!--<Fluent:Ribbon.QuickAccessItems>
                        <Fluent:QuickAccessMenuItem
					Target="{Binding ElementName=btncsscript}" />
                        <Fluent:QuickAccessMenuItem
					Target="{Binding ElementName=btndbutil}" />
                    </Fluent:Ribbon.QuickAccessItems>-->
                        <!--<Fluent:Ribbon.ContextualGroups>
                        <Fluent:RibbonContextualTabGroup Name="tabGroup1" BorderBrush="#FFFF00FF" Background="#FFFF00FF" Foreground="#FF800080" Header="FIRST" Visibility="Visible" />
                        <Fluent:RibbonContextualTabGroup Name="tabGroup2" BorderBrush="#FFFF9D00" Background="#FFFF9D00" Foreground="#FFC45300" Header="SECOND" Visibility="Visible" />
                        <Fluent:RibbonContextualTabGroup Name="invisibleTabGroup" BorderBrush="#FF008000" Background="#FFFF0000" Header="MUST BE HIDDEN" Visibility="Visible" />
                    </Fluent:Ribbon.ContextualGroups>-->

                        <Fluent:Ribbon.Menu>
                            <Grid>
                                <Fluent:Backstage Visibility="Hidden">
                                </Fluent:Backstage>
                            </Grid>
                        </Fluent:Ribbon.Menu>



                        <Fluent:RibbonTabItem Header="home" ReduceOrder="(P),(P),(P),(P),(P)">
                            <Fluent:RibbonGroupBox Header="{DynamicResource  mainwindow.lang.tools}">
                                <Fluent:Button Header="{DynamicResource  mainwindow.lang.tools.dbsupport}" Icon="Images\dbtool.png" LargeIcon="Images\dbtool.png" Command="{Binding NewDbUtilCommand}" Name="btndbutil" />
                                <Fluent:Button Header="{DynamicResource  mainwindow.lang.tools.script}" Icon="Images\csscript.png" 	LargeIcon="Images\csscript.png" Command="{Binding NewScriptCommand}" Name="btncsscript" />
                                <Fluent:Button Header="{DynamicResource  mainwindow.lang.tools.addin}" Icon="Images\csscript.png" 	LargeIcon="Images\csscript.png" Command="{Binding LoadAddinCommand}" Name="btncsscript1" />
                            </Fluent:RibbonGroupBox>
                            <Fluent:RibbonGroupBox Header="{DynamicResource  mainwindow.lang.tools.common}">
                                <Fluent:CheckBox  x:Name="chkDummyData" Margin="15" IsChecked="{Binding FileStats.IsVisible, Mode=TwoWay}" >Output</Fluent:CheckBox>
                            </Fluent:RibbonGroupBox>
                            <Fluent:RibbonGroupBox Header="{DynamicResource  mainwindow.lang.tools.setting}">
                                <Fluent:DropDownButton  ResizeMode="Both" Icon="Images\setting.png" LargeIcon="Images\setting.png">
                                    <extoolkit:PropertyGrid Name="propertygrid"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        MinWidth="600"
                        MinHeight="500"
                        Margin="0"/>
                                </Fluent:DropDownButton>
                            </Fluent:RibbonGroupBox>

                        </Fluent:RibbonTabItem>


                    </Fluent:Ribbon>

                    <!--<Menu>
                    <MenuItem Header="_File">
                        <MenuItem Header="New" Command="{Binding NewCommand}"/>
                        <MenuItem Header="Open" Command="{Binding OpenCommand}"/>
                        <Separator/>
                        <MenuItem Header="Save" Command="{Binding ActiveDocument.SaveCommand}"/>
                        <MenuItem Header="Save As..." Command="{Binding ActiveDocument.SaveAsCommand}"/>

                        <MenuItem ItemsSource="{Binding RecentFiles.MruList.ListOfMRUEntries}" Grid.Row="0" Header="Recent Files"
                          Visibility="{Binding Path=RecentFiles.MruList.ListOfMRUEntries, Mode=OneWay, Converter={local:ZeroToVisibilityConverter}}">
                            <MenuItem.ItemContainerStyle>
                                <Style TargetType="MenuItem">
                                    <Setter Property="Header" Value="{Binding DisplayPathFileName, Mode=OneWay}" />
                                    <Setter Property="CommandParameter" Value="{Binding PathFileName, Mode=OneWay}" />
                                </Style>
                            </MenuItem.ItemContainerStyle>
                        </MenuItem>
                        <Separator/>
                        <MenuItem Header="Close" Command="{Binding ActiveDocument.CloseCommand}"/>

                    </MenuItem>
                    <MenuItem Header="Tools">
                        <MenuItem Header="Output" IsChecked="{Binding FileStats.IsVisible, Mode=TwoWay}" IsCheckable="True"/>
                        <MenuItem Header="C# Script Console" Command="{Binding NewScriptCommand}">
                            <MenuItem.Icon>
                                <Image Source="/DevelopWorkspace.Main;component/Images/csscript.png" Height="16"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="DataBase Support Utility" Command="{Binding NewDbUtilCommand}">
                            <MenuItem.Icon>
                                <Image Source="/DevelopWorkspace.Main;component/Images/excel _export.png" Height="16"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="expresso tool"  Command="{Binding ThirdPartyToolCommand}"/>
                        <MenuItem Header="Show Start Page" Command=""/>
                        <MenuItem Header="Start Restful Service"  Click="MenuItem_Click" />
                    </MenuItem>
                    <MenuItem Header="Layout">
                        <MenuItem Header="Load" Command="{Binding LoadLayoutCommand, ElementName=mainWindow}"/>
                        <MenuItem Header="Save" Command="{Binding SaveLayoutCommand, ElementName=mainWindow}"/>
                    </MenuItem>
                    <MenuItem Header="Addins" >
                        <MenuItem Header="update.." />
                        <MenuItem Header="Addins" ItemsSource="{Binding AddinMenuItems}" >
                            <MenuItem.ItemContainerStyle>
                                <Style>
                                    <Setter Property="MenuItem.Header" Value="{Binding AssemblyFullName}" />
                                    <Setter Property="MenuItem.Command" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.LoadAddinCommand}" />
                                    <Setter Property="MenuItem.CommandParameter" Value="{Binding AssemblyFullName}" />
                                </Style>
                            </MenuItem.ItemContainerStyle>
                        </MenuItem>
                    </MenuItem>
                    <MenuItem Header="Supported Tools" >
                        <MenuItem Header="Supported Tools" ItemsSource="{Binding ToolMenuItems}" >
                            <MenuItem.ItemContainerStyle>
                                <Style>
                                    <Setter Property="MenuItem.Header" Value="{Binding MenuTitle}" />
                                    <Setter Property="MenuItem.Command" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.ThirdPartyToolCommand}" />
                                    <Setter Property="MenuItem.CommandParameter" Value="{Binding ThirdPartyID}" />
                                </Style>
                            </MenuItem.ItemContainerStyle>
                        </MenuItem>
                    </MenuItem>
                    <MenuItem Header="Help">
                        <MenuItem Header="about developWorkspce"  Click="about_Click" />
                    </MenuItem>
                </Menu>-->
                    <avalonDock:DockingManager x:Name="dockManager" 
                                   AnchorablesSource="{Binding Tools}" 
                                   DocumentsSource="{Binding Files}"
                                   ActiveContent="{Binding ActiveDocument, Mode=TwoWay, Converter={StaticResource ActiveDocumentConverter}}"
   								   behav:DropFileCommand.DropCommand="comm:AppCommand.LoadFile"
                                   AllowDrop="True"
                                   Grid.Row="1" ActiveContentChanged="dockManager_ActiveContentChanged" Loaded="dockManager_Loaded" Initialized="dockManager_Initialized" LayoutChanged="dockManager_LayoutChanged">

                        <avalonDock:DockingManager.Theme>
                            <avalonDock:GenericTheme/>
                        </avalonDock:DockingManager.Theme>
                        <avalonDock:DockingManager.LayoutItemTemplateSelector>
                            <local:PanesTemplateSelector>
                                <local:PanesTemplateSelector.FileViewTemplate>
                                    <DataTemplate>
                                        <avalonEdit:TextEditor Document="{Binding Document, UpdateSourceTrigger=PropertyChanged}"
                                      SyntaxHighlighting="{Binding HighlightDef}"
                                      IsReadOnly="{Binding IsReadOnly}"
									                    IsModified="{Binding Path=IsDirty, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      WordWrap="{Binding Path=WordWrap, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      ShowLineNumbers="{Binding Path=ShowLineNumbers, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      Options="{Binding TextOptions}"
                                      HorizontalScrollBarVisibility="Auto"
                                      VerticalScrollBarVisibility="Auto">
                                            <avalonEdit:TextEditor.ContextMenu>
                                                <ContextMenu>
                                                    <MenuItem Command="Cut" Header="Cut">
                                                        <MenuItem.Icon>
                                                            <Image Source="/DevelopWorkspace;component/Images/App/Edit_Cut32.png" Height="16"/>
                                                        </MenuItem.Icon>
                                                    </MenuItem>
                                                    <MenuItem Command="Copy" Header="Copy">
                                                        <MenuItem.Icon>
                                                            <Image Source="/DevelopWorkspace;component/Images/App/Edit_Copy32.png" Height="16"/>
                                                        </MenuItem.Icon>
                                                    </MenuItem>
                                                    <MenuItem Command="Paste" Header="Paste">
                                                        <MenuItem.Icon>
                                                            <Image Source="/DevelopWorkspace;component/Images/App/Edit_Paste32.png" Height="16"/>
                                                        </MenuItem.Icon>
                                                    </MenuItem>
                                                    <MenuItem Command="Delete" Header="Delete">
                                                        <MenuItem.Icon>
                                                            <Image Source="/DevelopWorkspace;component/Images/App/Edit_Delete32.png" Height="16"/>
                                                        </MenuItem.Icon>
                                                    </MenuItem>
                                                    <MenuItem Command="Undo" Header="Undo">
                                                        <MenuItem.Icon>
                                                            <Image Source="/DevelopWorkspace;component/Images/App/Edit_Undo32.png" Height="16"/>
                                                        </MenuItem.Icon>
                                                    </MenuItem>
                                                    <MenuItem Command="Redo" Header="Redo">
                                                        <MenuItem.Icon>
                                                            <Image Source="/DevelopWorkspace;component/Images/App/Edit_Redo32.png" Height="16"/>
                                                        </MenuItem.Icon>
                                                    </MenuItem>
                                                </ContextMenu>
                                            </avalonEdit:TextEditor.ContextMenu>
                                        </avalonEdit:TextEditor>
                                    </DataTemplate>
                                </local:PanesTemplateSelector.FileViewTemplate>
                                <local:PanesTemplateSelector.StartPageViewTemplate>
                                    <DataTemplate>
                                        <view:StartPage />
                                    </DataTemplate>
                                </local:PanesTemplateSelector.StartPageViewTemplate>
                                <local:PanesTemplateSelector.CSScriptRunViewTemplate>
                                    <DataTemplate>
                                        <view:CSScriptRunView/>
                                    </DataTemplate>
                                </local:PanesTemplateSelector.CSScriptRunViewTemplate>
                                <local:PanesTemplateSelector.ScriptAddinViewTemplate>
                                    <DataTemplate>
                                        <view:ScriptAddinView/>
                                    </DataTemplate>
                                </local:PanesTemplateSelector.ScriptAddinViewTemplate>
                                <local:PanesTemplateSelector.DataExcelUtilViewTemplate>
                                    <DataTemplate>
                                        <view:DataExcelUtilView/>
                                    </DataTemplate>
                                </local:PanesTemplateSelector.DataExcelUtilViewTemplate>

                                <local:PanesTemplateSelector.RecentFilesViewTemplate>
                                    <DataTemplate>
                                        <view:RecentFilesView />
                                    </DataTemplate>
                                </local:PanesTemplateSelector.RecentFilesViewTemplate>
                                <local:PanesTemplateSelector.OutputToolViewTemplate>
                                    <DataTemplate>
                                        <view:OutputToolView LogText="{Binding LogText,  Mode=TwoWay}"/>
                                    </DataTemplate>
                                </local:PanesTemplateSelector.OutputToolViewTemplate>
                                <local:PanesTemplateSelector.PropertiesToolViewTemplate>
                                    <DataTemplate>
                                        <view:PropertiesToolView/>
                                    </DataTemplate>
                                </local:PanesTemplateSelector.PropertiesToolViewTemplate>
                                <local:PanesTemplateSelector.ThirdPartyToolViewTemplate>
                                    <DataTemplate>
                                        <view:ThirdPartyToolView ThirdPartyID="{Binding Path=Title}"/>
                                    </DataTemplate>
                                </local:PanesTemplateSelector.ThirdPartyToolViewTemplate>
                            </local:PanesTemplateSelector>
                        </avalonDock:DockingManager.LayoutItemTemplateSelector>
                        <avalonDock:DockingManager.LayoutItemContainerStyleSelector>
                            <local:PanesStyleSelector>
                                <local:PanesStyleSelector.ToolStyle>
                                    <Style TargetType="{x:Type avalonDock:LayoutAnchorableItem}">
                                        <Setter Property="Title" Value="{Binding Model.Title}"/>
                                        <Setter Property="IconSource" Value="{Binding Model.IconSource}"/>
                                        <Setter Property="Visibility" Value="{Binding Model.IsVisible, Mode=TwoWay, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter={x:Static Visibility.Hidden}}"/>
                                        <Setter Property="ContentId" Value="{Binding Model.ContentId}"/>
                                        <Setter Property="IsSelected" Value="{Binding Model.IsSelected, Mode=TwoWay}"/>
                                        <Setter Property="IsActive" Value="{Binding Model.IsActive, Mode=TwoWay}"/>
                                    </Style>
                                </local:PanesStyleSelector.ToolStyle>
                                <local:PanesStyleSelector.StartPageStyle>
                                    <Style TargetType="{x:Type avalonDock:LayoutItem}">
                                        <Setter Property="Title" Value="{Binding Model.Title}"/>
                                        <Setter Property="ToolTip" Value="{Binding Model.StartPageTip}"/>
                                        <Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}"/>
                                        <Setter Property="IconSource" Value="{Binding Model.IconSource}"/>
                                        <Setter Property="ContentId" Value="{Binding Model.ContentId}"/>
                                    </Style>
                                </local:PanesStyleSelector.StartPageStyle>
                                <local:PanesStyleSelector.FileStyle>
                                    <Style TargetType="{x:Type avalonDock:LayoutItem}">
                                        <Setter Property="Title" Value="{Binding Model.Title}"/>
                                        <Setter Property="ToolTip" Value="{Binding Model.FilePath}"/>
                                        <Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}"/>
                                        <Setter Property="IconSource" Value="{Binding Model.IconSource}"/>
                                        <Setter Property="ContentId" Value="{Binding Model.ContentId}"/>
                                    </Style>
                                </local:PanesStyleSelector.FileStyle>
                                <local:PanesStyleSelector.RecentFilesStyle>
                                    <Style TargetType="{x:Type avalonDock:LayoutAnchorableItem}">
                                        <Setter Property="Title" Value="{Binding Model.Title}"/>
                                        <Setter Property="ToolTip" Value="{Binding Model.FilePath}"/>
                                        <Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}"/>
                                        <Setter Property="IconSource" Value="{Binding Model.IconSource}"/>
                                        <Setter Property="ContentId" Value="{Binding Model.ContentId}"/>
                                    </Style>
                                </local:PanesStyleSelector.RecentFilesStyle>
                            </local:PanesStyleSelector>
                        </avalonDock:DockingManager.LayoutItemContainerStyleSelector>
                        <avalonDock:DockingManager.LayoutUpdateStrategy>
                            <local:LayoutInitializer/>
                        </avalonDock:DockingManager.LayoutUpdateStrategy>

                        <avalonDock:LayoutRoot>
                            <avalonDock:LayoutPanel Orientation="Vertical">
                                <avalonDock:LayoutDocumentPane/>
                                <avalonDock:LayoutAnchorablePane Name="ToolsPane" DockHeight="150">
                                </avalonDock:LayoutAnchorablePane>
                            </avalonDock:LayoutPanel>
                        </avalonDock:LayoutRoot>
                    </avalonDock:DockingManager>
                </Grid>
            </DockPanel>
        </heid:BusyDecorator>
    </Canvas>
</Fluent:RibbonWindow>