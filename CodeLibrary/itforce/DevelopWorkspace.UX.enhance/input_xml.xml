using System;
using System.Drawing;
using System.IO;
using System.Data;
using Microsoft.CSharp;
using System.Collections.Generic;
using DevelopWorkspace.Base;
using System.Threading;
using System.Threading.Tasks;
using System.ComponentModel;
using System.Linq;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Xml;
using System.Windows.Markup;
using System.Windows.Threading;
using System.Runtime.InteropServices;
using System.Windows.Interop;
using System.Diagnostics;
using System.Reflection;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections.ObjectModel;
using Microsoft.Office.Interop.Word;
namespace DevelopWorkspace.UX.enhance
{
	public class UX
	{
	    [DllImport("User32.dll")]
	    private static extern bool SetForegroundWindow(IntPtr handle);

	    [DllImport("User32.dll")]
	    private static extern bool ShowWindow(IntPtr handle, int nCmdShow);

	    private const int SW_SHOWNORMAL = 1;
	    private const int SW_SHOWMAXIMIZED = 3;

	    public static void BringToFront(IntPtr handle)
	    {
	        if (handle == IntPtr.Zero)
	            return;

	        // Maximize window
	        ShowWindow(handle, SW_SHOWNORMAL);

	        SetForegroundWindow(handle);
	    }
	    public static void OpenMemoFile(string filename)
	    {
	        string helpfile = System.IO.Path.Combine(AppDomain.CurrentDomain.BaseDirectory, "help", filename);
	        if (File.Exists(helpfile))
	        {
	            Microsoft.Office.Interop.Word.Application app = new Microsoft.Office.Interop.Word.Application();
	            app.Documents.Open(helpfile);
	            app.Visible = true;
	            string processName = "WINWORD";
	            Process[] processes = Process.GetProcessesByName(processName);
	            if (processes.Length == 0) // Process not running
	            { }
	            else // Process running
	            {
	                BringToFront(processes[0].MainWindowHandle);
	            }

	        }
	    }

  	    public static Fluent.RibbonGroupBox getHelpRibbonGroupBox(string wordfile,string url)
	    {
            Fluent.RibbonGroupBox ribbonGroupBox = new Fluent.RibbonGroupBox();
            ribbonGroupBox.Header = "その他";
            {
                Fluent.Button button = new Fluent.Button();
                button.LargeIcon = DevelopWorkspace.Base.Utils.Files.GetIconFile("word");
                button.Header = "メモ";
                button.Margin = new Thickness(1, 0, 1, 0);
                button.Click += (object sender, RoutedEventArgs e) =>
                   {
                       DevelopWorkspace.Base.Services.BusyWorkService(new Action(() =>
                       {
                           try
                           {
                               OpenMemoFile(wordfile + ".docx");
                           }
                           catch (Exception ex)
                           {
                               DevelopWorkspace.Base.Logger.WriteLine(ex.Message, DevelopWorkspace.Base.Level.ERROR);
                           }
                       }));

                   };
                ribbonGroupBox.Items.Add(button);
            }
            {
                Fluent.Button button = new Fluent.Button();
                button.LargeIcon = DevelopWorkspace.Base.Utils.Files.GetIconFile("confluence");
                button.Header = "コンフルンス（RAKUTEN）";
                button.Margin = new Thickness(1, 0, 1, 0);
                button.Click += (object sender, RoutedEventArgs e) =>
                   {
                       DevelopWorkspace.Base.Services.BusyWorkService(new Action(() =>
                       {
                           try
                           {
                               System.Diagnostics.Process.Start(url);
                           }
                           catch (Exception ex)
                           {
                               DevelopWorkspace.Base.Logger.WriteLine(ex.Message, DevelopWorkspace.Base.Level.ERROR);
                           }
                       }));

                   };
                ribbonGroupBox.Items.Add(button);
            }
            return ribbonGroupBox;
	    }
	
	}
}
